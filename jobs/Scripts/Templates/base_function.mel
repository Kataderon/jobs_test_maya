global proc rpr_render(string $test_case, string $script_info){{

	string $render_device = "{render_device}";
	setAttr "RadeonProRenderGlobals.samplesPerUpdate" {SPU};
	optionVar -rm "RPR_DevicesSelected";
	if ($render_device == "gpu") {{
		optionVar -iva "RPR_DevicesSelected" 1;
		optionVar -iva "RPR_DevicesSelected" 0;
	}} else if ($render_device == "cpu"){{
		optionVar -iva "RPR_DevicesSelected" 0;
		optionVar -iva "RPR_DevicesSelected" 1;
	}} else if ($render_device == "dual"){{
		optionVar -iva "RPR_DevicesSelected" 1;
		optionVar -iva "RPR_DevicesSelected" 1;
	}}

	// Remove this section after Pass_Limit or Adaptive_Sampling groups implementation
	setAttr "RadeonProRenderGlobals.adaptiveThreshold" 0;
    setAttr "RadeonProRenderGlobals.completionCriteriaSeconds" 0;

	float $startTime = 0;
	float $testTime = 0;
	fireRender -waitForItTwo;
	$startTime = `timerX`;
	renderIntoNewWindow render;
	string $ff = "";
	sysFile -makeDir ("{work_dir}" + "/Color");
	$ff = "{work_dir}" + "/Color/" + $test_case;
	renderWindowEditor -edit  -dst "color" renderView;
	renderWindowEditor -edit -com -writeImage $ff renderView;
	$testTime = `timerX -startTime $startTime`;

	string $scene_name  = `file -q -sn -shn`;
	if ($scene_name == "") {{
		$scene_name = "untitled";
	}}
	string $render_device_name[] = `optionVar -q "RPR_DevicesName"`;
	string $filePath = "{work_dir}" + "/" + $test_case + "_RPR.json";
	int $fileID = `fopen $filePath "a"`;
	fprint $fileID ("[");
	fprint $fileID ("\r\n {{");
	fprint $fileID ("\r\n  \"render_device\": \"" + $render_device_name[0] + "\",");
	fprint $fileID ("\r\n  \"tool\": \"Maya " + `about -version` + "\",");
	fprint $fileID ("\r\n  \"date_time\": \"" + `date -format "DD/MM/YYYY hh:mm:ss"` + "\",");
	fprint $fileID ("\r\n  \"render_version\": \"" + getRPRPluginVersion() + "\",");
	fprint $fileID ("\r\n  \"core_version\": \"" + getRprCoreVersion() + "\",");
	fprint $fileID ("\r\n  \"file_name\": \"" + $test_case + ".jpg\",");
	fprint $fileID ("\r\n  \"render_color_path\": \"Color/" + $test_case + ".jpg\",");
	fprint $fileID ("\r\n  \"render_time\": " + $testTime + ",");
	fprint $fileID ("\r\n  \"scene_name\": \"" + $scene_name + "\",");
	fprint $fileID ("\r\n  \"test_group\": \"" + "{testType}" + "\",");
	fprint $fileID ("\r\n  \"test_case\": \"" + $test_case + "\",");
	fprint $fileID ("\r\n  \"difference_color\": \"" + "not compared yet" + "\",");
	fprint $fileID ("\r\n  \"test_status\": \"" + "passed" + "\",");
	fprint $fileID ("\r\n  \"script_info\": " + $script_info);
	fprint $fileID ("\r\n }}");
	fprint $fileID ("\r\n]");
	fclose $fileID;

}}


global proc check_test_cases_success_save(string $test_case, string $script_info){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                rpr_success_save($test_case, $script_info);
            }}
        }}
    }} else {{
        rpr_success_save($test_case, $script_info);
    }}

}}


global proc rpr_success_save(string $test_case, string $script_info){{

	if( `pluginInfo -query -loaded RadeonProRender` == 0){{
    	loadPlugin RadeonProRender;
	}}

	sysFile -makeDir ("{work_dir}" + "/Color");
	string $work_folder = "{work_dir}/Color/" + $test_case + ".jpg";
	sysFile -copy ($work_folder) ("{work_dir}" + "/../../../../jobs/Tests/pass.jpg");

	string $scene_name  = `file -q -sn -shn`;
	if ($scene_name == "") {{
		$scene_name = "untitled";
	}}
	string $render_device_name[] = `optionVar -q "RPR_DevicesName"`;
	string $filePath = "{work_dir}" + "/" + $test_case + "_RPR.json";
	int $fileID = `fopen $filePath "a"`;
	fprint $fileID ("[");
	fprint $fileID ("\r\n {{");
	fprint $fileID ("\r\n  \"render_device\": \"" + $render_device_name[0] + "\",");
	fprint $fileID ("\r\n  \"tool\": \"Maya " + `about -version` + "\",");
	fprint $fileID ("\r\n  \"date_time\": \"" + `date -format "DD/MM/YYYY hh:mm:ss"` + "\",");
	fprint $fileID ("\r\n  \"render_version\": \"" + getRPRPluginVersion() + "\",");
	fprint $fileID ("\r\n  \"core_version\": \"" + getRprCoreVersion() + "\",");
	fprint $fileID ("\r\n  \"file_name\": \"" + $test_case + ".jpg\",");
	fprint $fileID ("\r\n  \"render_color_path\": \"Color/" + $test_case + ".jpg\",");
	fprint $fileID ("\r\n  \"render_time\": " + 0 + ",");
	fprint $fileID ("\r\n  \"scene_name\": \"" + $scene_name + "\",");
	fprint $fileID ("\r\n  \"test_group\": \"" + "{testType}" + "\",");
	fprint $fileID ("\r\n  \"test_case\": \"" + $test_case + "\",");
	fprint $fileID ("\r\n  \"difference_color\": \"" + "no compare" + "\",");
	fprint $fileID ("\r\n  \"test_status\": \"" + "passed" + "\",");
	fprint $fileID ("\r\n  \"script_info\": " + $script_info);
	fprint $fileID ("\r\n }}");
	fprint $fileID ("\r\n]");
	fclose $fileID;

}}

/*
global proc check_test_cases_fail_save(string $test_case, string $script_info){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                rpr_fail_save($test_case, $script_info);
            }}
        }}
    }} else {{
        rpr_fail_save($test_case, $script_info);
    }}

}}
*/

global proc rpr_fail_save(string $test_case, string $script_info){{

	if( `pluginInfo -query -loaded RadeonProRender` == 0){{
    	loadPlugin RadeonProRender;
	}}
	
	sysFile -makeDir ("{work_dir}" + "/Color");
	string $work_folder = "{work_dir}/Color/" + $test_case + ".jpg";
	sysFile -copy ($work_folder) ("{work_dir}" + "/../../../../jobs/Tests/failed.jpg");

	string $scene_name  = `file -q -sn -shn`;
	if ($scene_name == "") {{
		$scene_name = "untitled";
	}}
	string $render_device_name[] = `optionVar -q "RPR_DevicesName"`;
	string $filePath = "{work_dir}" + "/" + $test_case + "_RPR.json";
	int $fileID = `fopen $filePath "a"`;
	fprint $fileID ("[");
	fprint $fileID ("\r\n {{");
	fprint $fileID ("\r\n  \"render_device\": \"" + $render_device_name[0] + "\",");
	fprint $fileID ("\r\n  \"tool\": \"Maya " + `about -version` + "\",");
	fprint $fileID ("\r\n  \"date_time\": \"" + `date -format "DD/MM/YYYY hh:mm:ss"` + "\",");
	fprint $fileID ("\r\n  \"render_version\": \"" + getRPRPluginVersion() + "\",");
	fprint $fileID ("\r\n  \"core_version\": \"" + getRprCoreVersion() + "\",");
	fprint $fileID ("\r\n  \"file_name\": \"" + $test_case + ".jpg\",");
	fprint $fileID ("\r\n  \"render_color_path\": \"Color/" + $test_case + ".jpg\",");
	fprint $fileID ("\r\n  \"render_time\": " + 0 + ",");
	fprint $fileID ("\r\n  \"scene_name\": \"" + $scene_name + "\",");
	fprint $fileID ("\r\n  \"test_group\": \"" + "{testType}" + "\",");
	fprint $fileID ("\r\n  \"test_case\": \"" + $test_case + "\",");
	fprint $fileID ("\r\n  \"difference_color\": \"" + "no compare" + "\",");
	fprint $fileID ("\r\n  \"test_status\": \"" + "failed" + "\",");
	fprint $fileID ("\r\n  \"script_info\": " + $script_info);
	fprint $fileID ("\r\n }}");
	fprint $fileID ("\r\n]");
	fclose $fileID;

}}
