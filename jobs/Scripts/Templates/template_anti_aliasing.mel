
global proc check_test_cases_fail_save(string $test_case, int $filter, int $filter_size, string $script_info, string $scene){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                rpr_fail_save($test_case, $script_info);
            }}
        }}
    }} else {{
        rpr_fail_save($test_case, $script_info);
    }}

}}

global proc check_test_cases(string $test_case, int $filter, int $filter_size, string $script_info, string $scene){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                prerender($test_case, $filter, $filter_size, $script_info, $scene);
            }}
        }}
    }} else {{
        prerender($test_case, $filter, $filter_size, $script_info, $scene);
    }}

}}


global proc prerender(string $test_case, int $filter, int $filter_size, string $script_info, string $scene){{

    string $scene_name  = `file -q -sn -shn`;
    if ($scene_name != $scene) {{
        if (catch (`file -f -options "v=0;" -prompt 0 -ignoreVersion -o $scene`) == "1") {{
            evalDeferred("quit -abort");
        }}
        validateFiles();
    }}

    if( `pluginInfo -query -loaded RadeonProRender` == 0){{
        loadPlugin RadeonProRender;
    }}

    if ({resolution_x} && {resolution_y}) {{
        setAttr "defaultResolution.width" {resolution_x};
        setAttr "defaultResolution.height" {resolution_y};
    }}

    setAttr "defaultRenderGlobals.currentRenderer" -type "string" "FireRender";
    setAttr "defaultRenderGlobals.imageFormat" 8;
    setAttr "RadeonProRenderGlobals.completionCriteriaIterations" {pass_limit};

    setAttr "RadeonProRenderGlobals.filter" $filter;
    setAttr "RadeonProRenderGlobals.filterSize" $filter_size;

    rpr_render($test_case, $script_info);
            
}}

global proc main(){{

	setProject ("{res_path}");
	
    // <-- fail -->

    // <-- start -->

	@check_test_cases("MAYA_RS_AA_001", 1, 1, "[\"AA filter: Box\", \"Filter Size: 1\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_002", 1, 5, "[\"AA filter: Box\", \"Filter Size: 5\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_003", 1, 10, "[\"AA filter: Box\", \"Filter Size: 10\"]", "maya_shaderball.ma");

    @check_test_cases("MAYA_RS_AA_004", 2, 1, "[\"AA filter: Lanczos\", \"Filter Size: 1\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_005", 2, 5, "[\"AA filter: Lanczos\", \"Filter Size: 5\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_006", 2, 10, "[\"AA filter: Lanczos\", \"Filter Size: 10\"]", "maya_shaderball.ma");

    @check_test_cases("MAYA_RS_AA_007", 3, 1, "[\"AA filter: Triangle\", \"Filter Size: 1\"]", "maya_shaderball.ma"); 
    @check_test_cases("MAYA_RS_AA_008", 3, 5, "[\"AA filter: Triangle\", \"Filter Size: 5\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_009", 3, 10, "[\"AA filter: Triangle\", \"Filter Size: 10\"]", "maya_shaderball.ma");

    @check_test_cases("MAYA_RS_AA_010", 4, 1, "[\"AA filter: Box\", \"Filter Size: 1\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_011", 4, 5, "[\"AA filter: Box\", \"Filter Size: 5\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_012", 4, 10, "[\"AA filter: Box\", \"Filter Size: 10\"]", "maya_shaderball.ma");

    @check_test_cases("MAYA_RS_AA_013", 5, 1, "[\"AA filter: Gaussian\", \"Filter Size: 1\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_014", 5, 5, "[\"AA filter: Gaussian\", \"Filter Size: 5\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_015", 5, 10, "[\"AA filter: Gaussian\", \"Filter Size: 10\"]", "maya_shaderball.ma");

    @check_test_cases("MAYA_RS_AA_016", 6, 1, "[\"AA filter: Blackmanharris\", \"Filter Size: 1\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_017", 6, 5, "[\"AA filter: Blackmanharris\", \"Filter Size: 5\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_AA_018", 6, 10, "[\"AA filter: Blackmanharris\", \"Filter Size: 10\"]", "maya_shaderball.ma");

	// <-- end -->

	evalDeferred("quit -abort");
}}
