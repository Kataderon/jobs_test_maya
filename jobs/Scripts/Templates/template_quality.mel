
global proc resetAttributes(){{ 

    setAttr "RadeonProRenderGlobals.samples" 1;
    setAttr "RadeonProRenderGlobals.filter" 4;
    setAttr "RadeonProRenderGlobals.filterSize" 1.5;
    setAttr "RadeonProRenderGlobals.maxRayDepth" 8;
    setAttr "RadeonProRenderGlobals.maxDepthDiffuse" 3;
    setAttr "RadeonProRenderGlobals.maxDepthGlossy" 5;
    setAttr "RadeonProRenderGlobals.maxDepthRefraction" 5;
    setAttr "RadeonProRenderGlobals.maxDepthRefractionGlossy" 5;
    setAttr "RadeonProRenderGlobals.maxDepthShadow" 5;
    setAttr "RadeonProRenderGlobals.raycastEpsilon" 0.02;
    setAttr "RadeonProRenderGlobals.enableOOC" 0;
    setAttr "RadeonProRenderGlobals.textureCacheSize" 512;

}}

global proc check_test_cases_fail_save(string $test_case, string $script_info, string $scene){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                rpr_fail_save($test_case, $script_info);
            }}
        }}
    }} else {{
        rpr_fail_save($test_case, $script_info);
    }}

}}

global proc check_test_cases(string $test_case, string $script_info, string $scene){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                prerender($test_case, $script_info, $scene);
            }}
        }}
    }} else {{
        prerender($test_case, $script_info, $scene);
    }}
}}

global proc prerender(string $test_case, string $script_info, string $scene){{

    string $scene_name  = `file -q -sn -shn`;
    if ($scene_name != $scene) {{
        if (catch (`file -f -options "v=0;"  -ignoreVersion -o $scene`) == "1") {{
            evalDeferred("quit -abort");
        }}
    }}

	if( `pluginInfo -query -loaded RadeonProRender` == 0){{
    	loadPlugin RadeonProRender;
	}}

	if ({resolution_x} && {resolution_y}) {{
        setAttr "defaultResolution.width" {resolution_x};
        setAttr "defaultResolution.height" {resolution_y};
    }}

	setAttr "defaultRenderGlobals.currentRenderer" -type "string" "FireRender";
	setAttr "defaultRenderGlobals.imageFormat" 8;
	setAttr "RadeonProRenderGlobals.completionCriteriaIterations" {pass_limit};

    switch ($test_case) {{

    case "MAYA_RS_QL_001":
        setAttr "RadeonProRenderGlobals.maxRayDepth" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_002":
        setAttr "RadeonProRenderGlobals.maxRayDepth" 50;
        resetAttributes();
        break;

    case "MAYA_RS_QL_003":
        setAttr "RadeonProRenderGlobals.maxDepthDiffuse" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_004":
        setAttr "RadeonProRenderGlobals.maxDepthDiffuse" 50;
        resetAttributes();
        break;

    case "MAYA_RS_QL_005":
        setAttr "RadeonProRenderGlobals.maxDepthGlossy" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_006":
        setAttr "RadeonProRenderGlobals.maxDepthGlossy" 50;
        resetAttributes();
        break;

    case "MAYA_RS_QL_007":
        setAttr "RadeonProRenderGlobals.maxDepthRefraction" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_008":
        setAttr "RadeonProRenderGlobals.maxDepthRefraction" 50;
        resetAttributes();
        break;

    case "MAYA_RS_QL_009":
        setAttr "RadeonProRenderGlobals.maxDepthRefractionGlossy" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_010":
        setAttr "RadeonProRenderGlobals.maxDepthRefractionGlossy" 50;
        resetAttributes();
        break;

    case "MAYA_RS_QL_011":
        setAttr "RadeonProRenderGlobals.maxDepthShadow" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_012":
        setAttr "RadeonProRenderGlobals.maxDepthShadow" 50;
        resetAttributes();
        break;

    case "MAYA_RS_QL_013":
        setAttr "RadeonProRenderGlobals.raycastEpsilon" 0;
        resetAttributes();
        break;

    case "MAYA_RS_QL_014":
        setAttr "RadeonProRenderGlobals.raycastEpsilon" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_015":
        setAttr "RadeonProRenderGlobals.enableOOC" 1;
        resetAttributes();
        break;

    case "MAYA_RS_QL_016":
        setAttr "RadeonProRenderGlobals.enableOOC" 1;
        setAttr "RadeonProRenderGlobals.textureCacheSize" 4096;
        resetAttributes();
        break;

    case "MAYA_RS_QL_017":
        setAttr "RadeonProRenderGlobals.maxRayDepth" 2;
        setAttr "RadeonProRenderGlobals.maxDepthDiffuse" 2;
        setAttr "RadeonProRenderGlobals.maxDepthGlossy" 2;
        setAttr "RadeonProRenderGlobals.maxDepthRefraction" 2;
        setAttr "RadeonProRenderGlobals.maxDepthRefractionGlossy" 2;
        setAttr "RadeonProRenderGlobals.maxDepthShadow" 2;
        setAttr "RadeonProRenderGlobals.raycastEpsilon" 0;
        resetAttributes();
        break;

    case "MAYA_RS_QL_018":
        setAttr "RadeonProRenderGlobals.maxRayDepth" 50;
        setAttr "RadeonProRenderGlobals.maxDepthDiffuse" 50;
        setAttr "RadeonProRenderGlobals.maxDepthGlossy" 50;
        setAttr "RadeonProRenderGlobals.maxDepthRefraction" 50;
        setAttr "RadeonProRenderGlobals.maxDepthRefractionGlossy" 50;
        setAttr "RadeonProRenderGlobals.maxDepthShadow" 50;
        setAttr "RadeonProRenderGlobals.raycastEpsilon" 2;
        resetAttributes();
        break;

    case "MAYA_RS_QL_019":
        setAttr "RadeonProRenderGlobals.giClampIrradiance" 1;
        setAttr "RadeonProRenderGlobals.giClampIrradianceValue" 50;
        resetAttributes();
        break;

    case "MAYA_RS_QL_020":
        setAttr "RadeonProRenderGlobals.giClampIrradiance" 1;
        setAttr "RadeonProRenderGlobals.giClampIrradianceValue" 100;
        resetAttributes();
        break;

    case "MAYA_RS_QL_021":
        setAttr "RadeonProRenderGlobals.giClampIrradiance" 1;
        setAttr "RadeonProRenderGlobals.giClampIrradianceValue" 50;
        setAttr "RadeonProRenderGlobals.textureCompression" 1;
        resetAttributes();
        break;

    case "MAYA_RS_QL_022":
        setAttr "RadeonProRenderGlobals.giClampIrradiance" 1;
        setAttr "RadeonProRenderGlobals.giClampIrradianceValue" 100;
        setAttr "RadeonProRenderGlobals.textureCompression" 1;
        resetAttributes();
        break;

    }}

	rpr_render($test_case, $script_info);

}}

global proc main(){{

	setProject ("{res_path}");

    // <-- fail -->

    // <-- start -->
	
	@check_test_cases("MAYA_RS_QL_001", "[\"Quality test\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_QL_002", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_003", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_004", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_005", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_006", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_007", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_008", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_009", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_010", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_011", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_012", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_013", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_014", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_015", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_016", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_017", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_018", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_019", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_020", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_021", "[\"Quality test\"]", "maya_shaderball.ma");
    @check_test_cases("MAYA_RS_QL_022", "[\"Quality test\"]", "maya_shaderball.ma");
    
    // <-- end -->

	evalDeferred("quit -abort");
}}
