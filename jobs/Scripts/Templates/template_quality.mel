
global proc check_test_cases(string $test_case, int $samples, int $mrd, string $script_info){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                prerender($test_case, $samples, $mrd, $script_info);
            }}
        }}
    }} else {{
        prerender($test_case, $samples, $mrd, $script_info);
    }}
}}

global proc prerender(string $test_case, int $samples, int $mrd, string $script_info){{

	if( `pluginInfo -query -loaded RadeonProRender` == 0){{
    	loadPlugin RadeonProRender;
	}}

	if ({resolution_x} && {resolution_y}) {{
        setAttr "defaultResolution.width" {resolution_x};
        setAttr "defaultResolution.height" {resolution_y};
    }}

	setAttr "defaultRenderGlobals.currentRenderer" -type "string" "FireRender";
	setAttr "defaultRenderGlobals.imageFormat" 8;
	setAttr "RadeonProRenderGlobals.completionCriteriaIterations" {pass_limit};

	setAttr "RadeonProRenderGlobals.samples" $samples;
	setAttr "RadeonProRenderGlobals.maxRayDepth" $mrd;

	rpr_render($test_case, $script_info);

}}

global proc main(){{

	setProject ("{res_path}");
	string $scenes = "{testsList}";
	string $scene[];
	$numTokens = `tokenize $scenes "," $scene`;
	for ($each in $scene) {{
    	file -f -options "v=0;"  -ignoreVersion -o $each;
    	check_test_cases("MAYA_RS_QL_001", 1, 5, "[\"Quality preset: Low\"]");
    	check_test_cases("MAYA_RS_QL_002", 8, 15, "[\"Quality preset: Medium\"]");
        check_test_cases("MAYA_RS_QL_003", 16, 25, "[\"Quality preset: High\"]");
        check_test_cases("MAYA_RS_QL_004", 24, 40, "[\"Render sampling: RS-24, MRD-40\"]");
    	check_test_cases("MAYA_RS_QL_005", 32, 50, "[\"Render sampling: RS-32, MRD-50\"]");
	}}

	evalDeferred("quit -abort");
}}
