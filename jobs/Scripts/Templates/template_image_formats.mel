
global proc check_test_cases_fail_save(string $test_case, int $image_format, string $script_info, string $scene){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                rpr_fail_save($test_case, $script_info);
            }}
        }}
    }} else {{
        rpr_fail_save($test_case, $script_info);
    }}

}}

global proc check_test_cases(string $test_case, int $image_format, string $script_info, string $scene){{

    string $tests = "{testCases}";
    string $test[];
    $numTokens = `tokenize $tests "," $test`;

    if ($tests != "all") {{
        for ($each in $test) {{ 
            if ($each == $test_case) {{
                prerender($test_case, $image_format, $script_info, $scene);
            }}
        }}
    }} else {{
        prerender($test_case, $image_format, $script_info, $scene);
    }}
}}

global proc prerender(string $test_case, int $image_format, string $script_info, string $scene){{

    string $scene_name  = `file -q -sn -shn`;
    if ($scene_name != $scene) {{
        file -f -options "v=0;"  -ignoreVersion -o $scene;
    }}

	if( `pluginInfo -query -loaded RadeonProRender` == 0){{
    	loadPlugin RadeonProRender;
	}}

    if ({resolution_x} && {resolution_y}) {{
        setAttr "defaultResolution.width" {resolution_x};
        setAttr "defaultResolution.height" {resolution_y};
    }}

	setAttr "defaultRenderGlobals.currentRenderer" -type "string" "FireRender";
	setAttr "defaultRenderGlobals.imageFormat" $image_format;
	setAttr "RadeonProRenderGlobals.completionCriteriaIterations" {pass_limit};

	rpr_render($test_case, $script_info);

    sysFile -copy ("{work_dir}/Color/" + $test_case +".jpg") ("{work_dir}" + "/../../../../jobs/Tests/pass.jpg");

}}

global proc main(){{

	setProject ("{res_path}");
	
    // <-- fail -->

    // <-- start -->

	@check_test_cases("MAYA_RS_IF_001", 6, "[\"Image format: Alias PIX (als)\"]", "maya_shaderball.ma");
    //check_test_cases("MAYA_RS_IF_002", 11, "[\"Image format: Cineon (cin)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_003", 35, "[\"Image format: DDS (dds)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_004", 9, "[\"Image format: EPS (eps)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_005", 0, "[\"Image format: GIF (gif)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_006", 8, "[\"Image format: JPEG (jpg)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_007", 7, "[\"Image format: Maya IFF (iff)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_008", 10, "[\"Image format: Maya16 IFF (iff)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_009", 31, "[\"Image format: PSD (psd)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_010", 36, "[\"Image format: PSD Layered (psd)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_011", 32, "[\"Image format: PNG (png)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_012", 12, "[\"Image format: Quantel (yuv)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_013", 2, "[\"Image format: RLA (rla)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_014", 5, "[\"Image format: SGI (sgi)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_015", 13, "[\"Image format: SGI16 (sgi)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_016", 1, "[\"Image format: SoftImage (pic)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_017", 19, "[\"Image format: Targa (tga)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_018", 3, "[\"Image format: Tiff (tif)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_019", 4, "[\"Image format: Tiff16 (tif)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_020", 20, "[\"Image format: Windows Bitmap (bmp)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_021", 40, "[\"Image format: EXR (exr)\"]", "maya_shaderball.ma");
	@check_test_cases("MAYA_RS_IF_022", 63, "[\"Image format: SonyPlaystation (tim)\"]", "maya_shaderball.ma");
	
    // <-- end -->


	evalDeferred("quit -abort");
}}

